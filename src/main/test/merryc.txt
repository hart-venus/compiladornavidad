@esto es un comentario inicial
 function int func1(){
	print("func1")|
	local float x|
	x <= 1.2| @semantico
	local char y|
	local char a <= 'c'| @semantico
	local float b <= 2.3 * 2.4| @semantico
	print(b)|
	local int c <= 5 ~ 6| @semantico
	local string d <= "Santa clos"| @semantico
	local bool e <= 2.1 > 3.0|
	print(d)|
	print()|
	read(c)|
	print()|
	print(c)|
	print(b)|
	print("\n")|
	read(b)|
	print("entra func 1")| 
	@semantico no hay return
	return c + 1 |
 } 
@funcion repetida
function float func2(char x22,char x23){@semantico borrar parametro
	local char x24 <= '!'| @semantico x22
	print("Entra a func2")|
	local char miChar<='!'|
	local string str1<="Hola $%&/#$&) mundo"|
	@local float fl1|
	local float fl1<=56.6| @semantico fl1
	local int in1<= 1| @semantico
	in1<= ++in1| @semantico
	local char arr[20]|
	arr[in1] <= 'c'| @semantico x22
	local int arr2[2] <= {1, 2}|
	local bool mibool <= true|


	local int in2<= --in1 + -14/++in1+7- 15 *  arr2[1] * func1 () | @semantico fl1, func1, arreglo 67

	
	print("func2")|
	mibool <= (3.7 * fl1 + (-45.6~7.6)) < 5.6 ^ true # mibool # !mibool  | @semantico literal 76 y 56

	print(in2)|

	return -5.6|@cambio en retorno genera semantico

} 

function float miFunc(int dif,char otra,char otra2){
	print("miFunc")|	
	local int i| 
	local int j|
	local int k|
	local int var|
	local float var2|
	for(i <= 10|i<10*2|++i)@semantico i
	{
		var <= 10|
		do{
			var <= var + 1| @semantico
			print("do")|
		} until (var > 15 ^ (34+33)>12)| @semantico

		if (var==0)
		{
			print("entra al if")|
			break|
		}
		elif(true)@sem√°ntico
		{
			print("entra a elif")|
		}
		else
		{
			for(j <= 10|j<30*2|++j){
				for(k <= 10|k<30*2|++k){
					print("entra al for anidado")|
				}
			}
		}
		if (var2==0.1){@semantico
			break|
		} else {
			print("entra al else")|
		}
	}
	return 1.1| @semantico
}

function char func3(char b1){ @semantico string
	return b1| 
}

function int main(){ @function

@Comentario 1

	
@comentario 2
	local bool b1|
	local float s1|
	read(s1)| @semantico
	@print(b1)| @semantico
	@print(true)| @semantico
	print(-6.7)|
	@func1()|
	@miFunc(1, 'b', 'a')| @semantico miFunc, hola
	local bool bl0 <= 6.7 != 8.9| @ok
	@local bool bl1 <= s1 => s1 ^ false # !(func2('a', 'b') > 5.6)| @semantico in1 >= fl1, func2
	print("final")|
	print((2 ** 4) ~ 2)|
	print(10 ~ 3)|

	print(3.0 ** -2.0)|


	return 1| @semantico
}
