import java_cup.runtime.*;

action code {:
  /** 
  * funciones públicas de pruebas para el lexer, por ahora
  * solo imprimen en consola
  * entrada: ninguna
  * salida: ninguna
  * restricciones: ninguna
  * objetivo: imprimir en consola
  */
  public void hola() {
    System.out.println("Hola");
  }
  public void adios() {
    System.out.println("Adios");
  }
:}

parser code {:
  Lexer lex;

  /**
  * Constructor de la clase parser
  * entrada: un lexer
  * salida: ninguna
  * restricciones: ninguna
  * objetivo: inicializar el lexer y el symbolFactory
  */
  public parser(Lexer lex) {
    this.lex = lex;
    this.symbolFactory = new DefaultSymbolFactory();
  }
  
  
:}

// como se escanean e inicializan los tokens
scan with {: return lex.next_token(); :};
init with {: :};

// Definición de terminales (tokens) a usar
// operaciones aritméticas binarias, renos de Santa 🦌🦌🦌🦌🦌🦌🦌
terminal op_res_rodolfo, op_sum_cupido, op_div_bailarin;
terminal op_dve_trueno,  op_mul_cometa, op_mod_rayo, op_pow_travieso;

// operaciones aritméticas unarias, grinch-quien 🎄😈🎅💚
terminal op_inc_quien, op_dec_grinch;

// operadores relacionales, elfos 🧝
terminal op_eq_astuto, op_l_nevado, op_g_alegre, op_geq_feliz;
terminal op_leq_copito, op_neq_chispa; 

// expresiones logicas, reyes magos 👑👑👑
terminal op_and_melchor, op_or_gaspar, op_not_baltasar;

// identificador, persona 🧑
terminal id_persona;

// tipos de datos, nombres de papá noel 🎅🎅🎅🎅🎅🎅
terminal t_int_colacho, t_float_santa, t_bool_noel, t_char_pascuero;
terminal t_string_kris, t_arr_gordo, t_null_reno, t_void_frosty;
terminal t_struct_snowman;

// literales, nombres de papá noel 🎅🎅🎅🎅🎅🎅
terminal l_int_colacho, l_float_santa, l_t_noel, l_f_noel;
terminal l_char_pascuero, l_string_kris;

// parentesis, cuento de navidad 🎄
terminal p_abre_cuento, p_cierra_cuento;

// parentesis cuadrados, abrir empaque 🎁
terminal p_abre_empaque, p_cierra_empaque;

// llaves, abrir regalo 🎁
terminal cb_abre_regalo, cb_cierra_regalo;

// flujo de control, folklore navideño
terminal if_elfo, elif_hada, else_duende, for_envuelve;
terminal do_hace, until_revisa, return_envia, break_corta;
terminal while_repite, switch_regalo, case_juguete, default_copo;
terminal in_envuelto_en; 

// print-read, habla y escucha 🗣️👂
terminal print_habla, read_escucha;

// fin de expresion, fin regalo 🎁
terminal fin_regalo;

// asignar, entregar 🎁
terminal assign_entregar;

// separador, separador de regalos 🎁
terminal sep_regalo;

// main, navidad 🎄
terminal main_navidad;

// error, carbón 🎁
terminal error_carbon;

// palabras clave de tarea 1
// función, chimenea 🎅
terminal function_chimenea;
// definición de variable, dulce 🍬
terminal local_dulce;

/* Definición de gramática - TAREA 1 */
non terminal navidad;
// no terminales para literales y para tipos
non terminal t_santa, l_santa;

// no terminales para definiciones de funciones
non terminal funciones_bolsa_navidena, funcion_ayudante_santa, def_funcion_trineo, bloque_codigo_casa_jengibre; 
non terminal parametros_funcion_renos, parametro_funcion_reno;
// no terminales para definiciones de lineas de código
non terminal linea_hombre_jengibre, lineas_hombre_jengibre;
// no terminales para asignacion de variables y expresiones
non terminal asignacion_adorno, expresion_regalo; 

start with navidad;

navidad ::= funciones_bolsa_navidena;


t_santa ::= t_int_colacho | t_float_santa | t_bool_noel | t_char_pascuero | t_string_kris;
l_santa ::= l_int_colacho | l_float_santa | l_t_noel | l_f_noel | l_char_pascuero | l_string_kris;

funciones_bolsa_navidena ::= funcion_ayudante_santa | funciones_bolsa_navidena funcion_ayudante_santa;
funcion_ayudante_santa ::= def_funcion_trineo bloque_codigo_casa_jengibre;

def_funcion_trineo ::= 
  function_chimenea t_santa id_persona p_abre_cuento p_cierra_cuento | // sin parametros
  function_chimenea t_santa id_persona p_abre_cuento parametros_funcion_renos p_cierra_cuento; // con parametros

parametros_funcion_renos ::= parametro_funcion_reno | parametros_funcion_renos sep_regalo parametro_funcion_reno;
parametro_funcion_reno ::= t_santa id_persona;

bloque_codigo_casa_jengibre ::= cb_abre_regalo lineas_hombre_jengibre cb_cierra_regalo;
linea_hombre_jengibre ::= asignacion_adorno fin_regalo;
lineas_hombre_jengibre ::= linea_hombre_jengibre lineas_hombre_jengibre | linea_hombre_jengibre;

asignacion_adorno ::= 
  local_dulce t_santa id_persona |
  local_dulce t_santa id_persona assign_entregar expresion_regalo;

expresion_regalo ::=
  l_santa | id_persona;

/*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*/